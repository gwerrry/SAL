cmake_minimum_required(VERSION 3.9)

project(SAL DESCRIPTION "Simple Audio Library")
set(CMAKE_C_STANDARD 99)
set(CMAKE_C_STANDARD_REQUIRED ON)
set(CMAKE_CXX_STANDARD 23)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
enable_testing()
include(CTest)
if ( NOT CMAKE_BUILD_TYPE )
    message( "Build Type not set, defaulting to Debug..." )
    set( CMAKE_BUILD_TYPE Debug )
endif()

if (WIN32)
    if(CMAKE_BUILD_TYPE STREQUAL "Debug")
        message("Debug mode detected. Using MSVC MultiThreadedDebug...")
        set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreadedDebug")
    else()
        message("Debug mode NOT detected. Using MSVC MultiThreaded...")
        set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded")
    endif()
endif()

set(SAL sal)
add_library(${SAL} INTERFACE)
target_include_directories(${SAL} SYSTEM INTERFACE "${CMAKE_SOURCE_DIR}")
target_link_libraries(${SAL} INTERFACE OpenAL::OpenAL)

# Function to generate a header file with #define directives for each wave file
function(generate_wave_file_header output_file)
    file(WRITE ${output_file} "// This file is generated by CMake. Do not edit manually.\n\n")
    file(GLOB WAVE_FILES "tests/wave_files/*")
    foreach(wave_file ${WAVE_FILES})
        get_filename_component(wave_name ${wave_file} NAME_WE)
        file(APPEND ${output_file} "#define WAVE_FILE_${wave_name} \"${wave_file}\"\n")
    endforeach()
endfunction()

generate_wave_file_header("${CMAKE_BINARY_DIR}/wave_file_defines.h")

# Include the directory containing the generated header file
include_directories(${CMAKE_BINARY_DIR})

file(GLOB TEST_SOURCES "tests/*.c" "tests/*.cpp")
foreach(test_file ${TEST_SOURCES})
    get_filename_component(test_name ${test_file} NAME_WE)
    add_executable(${test_name} ${test_file})
    target_link_libraries(${test_name} ${SAL})
    add_test(NAME ${test_name} COMMAND ${test_name})
endforeach()

find_package(OpenAL CONFIG REQUIRED) # comment out if you dont want to try with openal

add_executable(${PROJECT_NAME}
        "test.c"
        "test2.c"
)

target_link_libraries(${PROJECT_NAME} PRIVATE ${SAL}) # comment out if you dont want to try with openal
